import("stdfaust.lib");

mixer(k, s, h, c) = hgroup("mix", (vslider("[0]kk_lvl", 1, 0, 1, 0.01) * k, 
                                   vslider("[1]snr_lvl", 1, 0, 1, 0.01) * s, 
                                   vslider("[2]hh_lvl", 1, 0, 1, 0.01) * h,
                                   vslider("[3]cwbl_lvl", 1, 0, 1, 0.01) * c));

effectChain(k, s, h, c) = hgroup("fx", k + s + phaser(h+c) + sends : masterFx 

with {
    phaser(s) = s;

    sends = hgroup("[0]sendfx", delay + rever 
    with {
        reverControls = hgroup("[0]rever sends", hslider("[0]snr_rvb send[style:knob]", 0.1, 0, 1, 0.01), 
                                               hslider("[1]hh_rvb send[style:knob]", 0.05, 0, 1, 0.01),
                                               hslider("[2]cwbl_rvb send[style:knob]", 0.05, 0, 1, 0.01));

        reverMix(s_mix, h_mix, c_mix) = (s * s_mix + h * h_mix + c * c_mix);
        rever = reverControls : reverMix * 0.1 <: re.stereo_freeverb(0.95, 0.5, 0.2, 23) :> _ * 0.5;

        delayControls = hgroup("[1]delay sends", hslider("[0]snr_del[style:knob]", 0.1, 0, 1, 0.01), 
                                               hslider("[1]hh_del[style:knob]", 0.05, 0, 1, 0.01),
                                               hslider("[2]cwbl_del[style:knob]", 0.05, 0, 1, 0.01));

        delayMix(s_mix, h_mix, c_mix) = (s * s_mix + h * h_mix + c * c_mix);


        delayEngine = hgroup("delay", (+:de.delay(ma.SR / d, ma.SR * d))~(*(fb))
        with {
            d = hslider("delay[style:knob]", 2, 1, 5, 0.01);
            fb = hslider("feedback[style:knob]", 0.4, 0, 0.8, 0.01);
        });

        delay = delayControls : delayMix : delayEngine * 0.5;
    });

    masterFx = vgroup("[1]cmp", co.compressor_mono(3, -thrs, att, 0.4)
    with {
        thrs = hslider("cmp_thrs", 12, 0, 30, 0.01);
        att = hslider("cmp_att", 0.10, 0, 1, 0.01);
    });
});

soundPipe = hgroup("audio", (_,_,_,_ : mixer : effectChain));
